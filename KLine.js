var chartDom = document.getElementById('main');
var myChart = echarts.init(chartDom);
var option;

const upColor = '#ec0000';
const upBorderColor = '#8A0000';
const downColor = '#00da3c';
const downBorderColor = '#008F28';
// Each item: open，close，lowest，highest
const mydata = [
  ['2021-07-09', 21.0, 13.85, 13.74, 21.0],
  ['2021-07-16', 13.67, 12.58, 12.53, 14.73],
  ['2021-07-23', 12.62, 11.8, 11.79, 12.96],
  ['2021-07-30', 11.76, 10.69, 10.47, 11.76],
  ['2021-08-06', 10.69, 11.34, 10.69, 12.37],
  ['2021-08-13', 11.44, 12.37, 11.36, 13.21],
  ['2021-08-20', 12.43, 12.03, 11.81, 14.39],
  ['2021-08-27', 12.18, 12.23, 12.05, 12.98],
  ['2021-09-03', 12.12, 12.42, 11.44, 12.87],
  ['2021-09-10', 12.28, 12.73, 12.18, 12.83],
  ['2021-09-17', 12.72, 11.78, 11.57, 12.82],
  ['2021-09-24', 11.78, 11.83, 11.78, 12.46],
  ['2021-09-30', 12.1, 11.26, 11.09, 12.1],
  ['2021-10-08', 11.36, 11.59, 11.29, 11.71],
  ['2021-10-15', 11.51, 11.76, 11.28, 12.25],
  ['2021-10-22', 11.5, 11.38, 11.32, 11.98],
  ['2021-10-29', 11.38, 10.55, 10.41, 11.64],
  ['2021-11-05', 10.55, 10.82, 10.24, 10.96],
  ['2021-11-12', 10.83, 10.93, 10.4, 11.06],
  ['2021-11-19', 10.95, 11.32, 10.9, 11.43],
  ['2021-11-26', 11.45, 11.2, 11.17, 11.69],
  ['2021-12-03', 11.04, 13.66, 10.99, 15.08],
  ['2021-12-10', 13.28, 14.57, 12.16, 14.83],
  ['2021-12-17', 14.54, 13.42, 13.21, 15.5],
  ['2021-12-24', 13.42, 12.55, 12.55, 14.07],
  ['2021-12-31', 12.6, 12.83, 12.37, 13.45],
  ['2022-01-07', 12.75, 12.18, 12.16, 13.25],
  ['2022-01-14', 11.8, 12.26, 11.77, 12.88],
  ['2022-01-21', 12.26, 11.5, 11.44, 12.72],
  ['2022-01-28', 11.42, 10.73, 10.54, 11.53],
  ['2022-02-11', 10.99, 10.85, 10.8, 11.29],
  ['2022-02-18', 10.83, 11.08, 10.69, 11.23],
  ['2022-02-25', 11.04, 10.88, 10.61, 11.37],
  ['2022-03-04', 10.91, 10.76, 10.6, 11.13],
  ['2022-03-11', 10.75, 10.02, 9.2, 10.76],
  ['2022-03-18', 9.96, 9.71, 8.97, 10.01],
  ['2022-03-25', 9.71, 9.74, 9.67, 10.11],
  ['2022-04-01', 9.67, 9.3, 9.26, 9.84],
  ['2022-04-08', 9.31, 8.88, 8.7, 9.4],
  ['2022-04-15', 8.98, 11.16, 8.41, 12.47],
  ['2022-04-22', 10.8, 9.49, 9.44, 11.34],
  ['2022-04-29', 9.33, 8.72, 8.05, 9.43],
  ['2022-05-06', 8.72, 8.79, 8.58, 9.27],
  ['2022-05-13', 8.79, 9.75, 8.56, 9.85],
  ['2022-05-20', 9.63, 11.09, 9.12, 11.85],
  ['2022-05-27', 10.98, 11.16, 10.51, 12.5],
  ['2022-06-02', 10.96, 11.56, 10.76, 12.36],
  ['2022-06-10', 11.37, 10.33, 9.96, 11.66],
  ['2022-06-17', 10.33, 10.46, 10.14, 11.1],
  ['2022-06-24', 10.43, 11.5, 10.07, 12.46],
  ['2022-07-01', 11.6, 10.91, 10.62, 12.8],
  ['2022-07-08', 11.05, 10.71, 10.37, 11.3],
  ['2022-07-15', 10.61, 9.58, 9.58, 10.73],
  ['2022-07-22', 9.43, 9.72, 9.4, 10.0],
  ['2022-07-29', 9.69, 9.52, 9.15, 9.7],
  ['2022-08-05', 9.41, 9.3, 9.02, 9.99],
  ['2022-08-19', 9.47, 9.2, 9.2, 9.68],
  ['2022-08-26', 9.2, 8.91, 8.6, 9.33],
  ['2022-09-02', 8.75, 8.53, 8.42, 8.9],
  ['2022-09-09', 8.54, 8.73, 8.46, 8.89],
  ['2022-09-16', 8.76, 8.17, 8.16, 8.86],
  ['2022-09-23', 8.17, 8.08, 8.05, 8.54],
  ['2022-09-30', 8.05, 7.59, 7.58, 8.15],
  ['2022-10-14', 7.6, 7.83, 7.29, 7.91],
  ['2022-10-21', 7.75, 7.83, 7.75, 8.5],
  ['2022-10-28', 7.88, 8.22, 7.55, 8.7],
  ['2022-11-04', 8.1, 8.65, 7.99, 8.87],
  ['2022-11-11', 8.65, 8.53, 8.43, 8.72],
  ['2022-11-18', 8.5, 8.38, 8.38, 8.66],
  ['2022-11-25', 8.45, 8.15, 8.12, 9.07],
  ['2022-12-02', 8.08, 8.71, 8.04, 9.5],
  ['2022-12-09', 8.84, 8.7, 8.62, 9.06],
  ['2022-12-16', 8.74, 8.4, 8.3, 8.75],
  ['2022-12-23', 8.4, 7.91, 7.86, 8.65],
  ['2022-12-30', 7.88, 7.97, 7.75, 8.15],
  ['2023-01-06', 7.9, 8.07, 7.82, 8.22],
  ['2023-01-13', 8.12, 8.1, 8.05, 8.29],
  ['2023-01-20', 8.11, 8.29, 8.1, 8.31],
  ['2023-02-03', 8.48, 8.65, 8.41, 8.91],
  ['2023-02-10', 8.75, 8.69, 8.56, 8.75],
  ['2023-02-17', 8.7, 8.51, 8.49, 8.96],
  ['2023-02-24', 8.51, 9.74, 8.47, 10.1],
  ['2023-03-03', 9.64, 10.99, 9.5, 11.35],
  ['2023-03-10', 10.93, 10.6, 10.32, 11.32],
  ['2023-03-17', 10.53, 10.47, 10.1, 10.64],
  ['2023-03-24', 10.45, 10.28, 10.13, 10.65],
  ['2023-03-31', 10.18, 10.56, 10.05, 11.01],
  ['2023-04-07', 10.6, 10.53, 10.35, 10.94],
  ['2023-04-14', 10.47, 13.93, 9.92, 14.0],
  ['2023-04-21', 13.2, 12.58, 12.44, 13.6],
  ['2023-04-28', 12.6, 13.24, 12.19, 13.76],
  ['2023-05-05', 13.03, 12.89, 12.71, 13.96],
  ['2023-05-12', 12.98, 12.19, 12.12, 13.29],
  ['2023-05-19', 12.2, 12.26, 11.76, 12.48],
  ['2023-05-26', 12.2, 12.15, 11.77, 12.49],
  ['2023-06-02', 12.13, 12.35, 11.7, 12.52],
  ['2023-06-09', 12.48, 12.85, 11.92, 12.96],
  ['2023-06-16', 12.7, 12.5, 12.32, 13.19],
  ['2023-06-21', 12.5, 12.44, 12.24, 12.95],
  ['2023-06-30', 12.33, 13.23, 12.01, 13.33],
  ['2023-07-07', 13.23, 13.61, 13.23, 14.44],
  ['2023-07-14', 13.47, 13.7, 13.29, 15.15],
  ['2023-07-21', 13.6, 13.35, 13.21, 14.25],
  ['2023-07-28', 13.04, 13.51, 12.84, 13.95],
  ['2023-08-04', 14.34, 13.68, 13.6, 15.19],
  ['2023-08-11', 13.68, 12.94, 12.9, 14.02],
  ['2023-08-18', 12.8, 12.9, 12.41, 13.19],
  ['2023-08-25', 12.91, 11.24, 10.93, 13.06],
  ['2023-09-01', 11.81, 12.28, 11.29, 12.35],
  ['2023-09-08', 12.28, 12.4, 12.22, 12.94],
  ['2023-09-15', 12.38, 12.08, 12.02, 12.78],
  ['2023-09-22', 11.97, 12.02, 11.76, 12.41],
  ['2023-09-28', 12.0, 12.1, 11.85, 12.23],
  ['2023-10-13', 12.19, 11.02, 10.9, 12.29],
  ['2023-10-20', 11.0, 10.57, 10.51, 11.4],
  ['2023-10-27', 10.59, 10.71, 10.17, 11.0],
  ['2023-11-03', 10.65, 10.22, 10.0, 10.66],
  ['2023-11-10', 10.23, 10.17, 10.04, 10.47],
  ['2023-11-17', 10.2, 10.37, 10.18, 10.76],
  ['2023-11-24', 10.39, 10.22, 10.06, 10.52],
  ['2023-12-01', 10.28, 10.71, 10.12, 11.46],
  ['2023-12-08', 10.7, 9.7, 9.61, 10.71],
  ['2023-12-15', 9.68, 9.48, 9.39, 9.79],
  ['2023-12-22', 9.32, 9.12, 9.07, 9.76],
  ['2023-12-29', 9.14, 9.38, 8.91, 9.43],
  ['2024-01-05', 9.39, 9.17, 9.12, 9.57],
  ['2024-01-12', 9.18, 9.29, 8.79, 9.35],
  ['2024-01-19', 9.25, 8.9, 8.81, 9.32],
  ['2024-01-26', 8.9, 9.16, 8.32, 9.4],
  ['2024-02-02', 9.21, 8.25, 8.01, 9.53],
  ['2024-02-08', 8.2, 9.1, 7.61, 9.2],
  ['2024-02-23', 9.17, 9.32, 8.68, 9.35],
  ['2024-03-01', 9.45, 9.54, 9.12, 9.85],
  ['2024-03-08', 9.53, 9.6, 9.29, 9.85],
  ['2024-03-15', 10.12, 9.9, 9.63, 10.51],
  ['2024-03-22', 9.95, 9.74, 9.68, 10.2]
];
const data0 = splitData(mydata);
function splitData(rawData) {
  const categoryData = [];
  const values = [];
  for (var i = 0; i < rawData.length; i++) {
    categoryData.push(rawData[i].splice(0, 1)[0]);
    values.push(rawData[i]);
  }
  return {
    categoryData: categoryData,
    values: values
  };
}
function calculateMA(dayCount) {
  var result = [];
  for (var i = 0, len = data0.values.length; i < len; i++) {
    if (i < dayCount) {
      result.push('-');
      continue;
    }
    var sum = 0;
    for (var j = 0; j < dayCount; j++) {
      sum += +data0.values[i - j][1];
    }
    result.push(sum / dayCount);
  }
  return result;
}
option = {
  title: {
    text: '中集车辆周K线图',
    left: 0
  },
  tooltip: {
    trigger: 'axis',
    axisPointer: {
      type: 'cross'
    }
  },
  legend: {
    data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']
  },
  grid: {
    left: '10%',
    right: '10%',
    bottom: '15%'
  },
  xAxis: {
    type: 'category',
    data: data0.categoryData,
    boundaryGap: false,
    axisLine: { onZero: false },
    splitLine: { show: false },
    min: 'dataMin',
    max: 'dataMax'
  },
  yAxis: {
    scale: true,
    splitArea: {
      show: true
    }
  },
  dataZoom: [
    {
      type: 'inside',
      start: 50,
      end: 100
    },
    {
      show: true,
      type: 'slider',
      top: '90%',
      start: 50,
      end: 100
    }
  ],
  series: [
    {
      name: '日K',
      type: 'candlestick',
      data: data0.values,
      itemStyle: {
        color: upColor,
        color0: downColor,
        borderColor: upBorderColor,
        borderColor0: downBorderColor
      },
      markPoint: {
        label: {
          formatter: function (param) {
            return param != null ? Math.round(param.value) + '' : '';
          }
        },
        data: [
          {
            name: 'Mark',
            coord: ['2013/5/31', 2300],
            value: 2300,
            itemStyle: {
              color: 'rgb(41,60,85)'
            }
          },
          {
            name: 'highest value',
            type: 'max',
            valueDim: 'highest'
          },
          {
            name: 'lowest value',
            type: 'min',
            valueDim: 'lowest'
          },
          {
            name: 'average value on close',
            type: 'average',
            valueDim: 'close'
          }
        ],
        tooltip: {
          formatter: function (param) {
            return param.name + '<br>' + (param.data.coord || '');
          }
        }
      },
      markLine: {
        symbol: ['none', 'none'],
        data: [
          [
            {
              name: 'from lowest to highest',
              type: 'min',
              valueDim: 'lowest',
              symbol: 'circle',
              symbolSize: 10,
              label: {
                show: false
              },
              emphasis: {
                label: {
                  show: false
                }
              }
            },
            {
              type: 'max',
              valueDim: 'highest',
              symbol: 'circle',
              symbolSize: 10,
              label: {
                show: false
              },
              emphasis: {
                label: {
                  show: false
                }
              }
            }
          ],
          {
            name: 'min line on close',
            type: 'min',
            valueDim: 'close'
          },
          {
            name: 'max line on close',
            type: 'max',
            valueDim: 'close'
          }
        ]
      }
    },
    {
      name: 'MA5',
      type: 'line',
      data: calculateMA(5),
      smooth: true,
      lineStyle: {
        opacity: 0.5
      }
    },
    {
      name: 'MA10',
      type: 'line',
      data: calculateMA(10),
      smooth: true,
      lineStyle: {
        opacity: 0.5
      }
    },
    {
      name: 'MA20',
      type: 'line',
      data: calculateMA(20),
      smooth: true,
      lineStyle: {
        opacity: 0.5
      }
    },
    {
      name: 'MA30',
      type: 'line',
      data: calculateMA(30),
      smooth: true,
      lineStyle: {
        opacity: 0.5
      }
    }
  ]
};

option && myChart.setOption(option);
